{"version":3,"sources":["components/Page/Page.tsx","pages/DescriptionPage/DescriptionPage.tsx","pages/DetailsPage/DetailsPage.tsx","pages/FooterPage/FooterPage.tsx","pages/MainPage/MainPage.tsx","pages/PanoramaPage/PanoramaPage.tsx","pages/TitlePage/TitlePage.tsx","components/Layout/Layout.tsx","utils/Helpers.ts","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["Page","_React$PureComponent","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","bodyRef","createRef","innerRef","getHeight","current","offsetHeight","getDelta","cs","getComputedStyle","paddingX","parseFloat","paddingLeft","paddingRight","borderX","borderLeftWidth","borderRightWidth","bodyWidth","offsetWidth","Math","max","inherits","createClass","key","value","className","props","join","react_default","a","createElement","ref","style","objectSpread","top","hardOffset","transform","offset","delta","centerContent","children","React","PureComponent","DescriptionPage","Page_Page_Page","assign","DetailsPage","href","target","rel","FooterPage","MainPage","role","aria-label","PanoramaPage","src","alt","title","xmlns","height","width","position","verticalAlign","fill","viewBox","d","TitlePage","Layout","_React$Component","pageRefs","state","handleScroll","forceUpdate","debouncedHandleScroll","_","debounce","trailing","leading","updateChildrenHeights","console","log","map","setState","document","addEventListener","window","onresize","fonts","onloadingdone","removeEventListener","reduce","prev","body","getPages","_this2","_this$state","screenTop","pageYOffset","screenHeight","innerHeight","globalOffset","child","i","push","min","calculatedDelta","calculatedOffset","calculatedHardOffset","Component","App","pages","Layout_Layout","Boolean","location","hostname","match","ReactDOM","render","components_App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.47ecefbc.chunk.js","sourcesContent":["import React, { createRef, CSSProperties } from \"react\";\nimport \"./Page.css\";\n\nexport interface PageProps {\n  children: React.ReactNode;\n  hardOffset: number;\n  offset: number;\n  delta: number;\n  style?: CSSProperties;\n  className?: string;\n  centerContent?: boolean;\n}\n\nexport class Page extends React.PureComponent<PageProps> {\n  public bodyRef = createRef<HTMLDivElement>();\n  public innerRef = createRef<HTMLDivElement>();\n\n  public render() {\n    const className = [this.props.className || \"\", \"page\"].join(\" \");\n    return (\n      <section\n        ref={this.bodyRef}\n        className={className}\n        style={{\n          top: this.props.hardOffset,\n          transform: `translateY(${this.props.offset}px)`,\n          ...this.props.style,\n        }}\n      >\n        <div\n          ref={this.innerRef}\n          style={{ transform: `translate(${-this.props.delta}px)` }}\n          className={\n            !!this.props.centerContent ? \"page__centered\" : \"page-inner\"\n          }\n        >\n          {this.props.children}\n        </div>\n      </section>\n    );\n  }\n\n  public getHeight = (): number => {\n    return !!this.bodyRef.current ? this.bodyRef.current.offsetHeight : 0;\n  }\n\n  public getDelta = (): number => {\n    if (!this.innerRef.current || !this.bodyRef.current) {\n      return 0;\n    }\n    const cs = getComputedStyle(this.bodyRef.current);\n    const paddingX =\n      parseFloat(cs.paddingLeft || \"\") + parseFloat(cs.paddingRight || \"\");\n    const borderX =\n      parseFloat(cs.borderLeftWidth || \"\") +\n      parseFloat(cs.borderRightWidth || \"\");\n    const bodyWidth = this.bodyRef.current.offsetWidth - paddingX - borderX;\n\n    return Math.max(this.innerRef.current.offsetWidth - bodyWidth, 0);\n  }\n}\n","import React from \"react\";\nimport { LayoutElementPosition } from \"../../components/Layout/Layout\";\nimport { Page } from \"../../components/Page/Page\";\nimport \"./DescriptionPage.css\";\n\nexport type DescriptionPageProps = LayoutElementPosition;\n\nexport const DescriptionPage: React.FC<DescriptionPageProps> = (\n  props: DescriptionPageProps,\n) => {\n  return (\n    <Page {...props} key=\"description-page\" className=\"description-page\">\n      <p className=\"description-page__text\">\n        As you might have noticed, the beautiful panorama above was scrolling\n        horizonally as you scrolled the page despite that the scroll direction\n        was different. Moreover, if you notice the scrollbar on the right shows\n        the position you are at correctly and can even be used to navigate\n        around the page. So do all other scroll controls work.\n      </p>\n      <p className=\"description-page__text\">Pure magic!</p>\n    </Page>\n  );\n};\n","import React from \"react\";\nimport { LayoutElementPosition } from \"../../components/Layout/Layout\";\nimport { Page } from \"../../components/Page/Page\";\nimport \"./DetailsPage.css\";\n\nexport type DetailsPageProps = LayoutElementPosition;\n\nexport const DetailsPage: React.FC<DetailsPageProps> = (\n  props: DetailsPageProps,\n) => {\n  return (\n    <Page {...props} key=\"details-page\" className=\"details-page\">\n      <div className=\"details-page__text-container\">\n        <p className=\"details-page__text\">\n          Well, actually there is no magic involved (obviously). So, what is\n          actually happening here is that we have sections, called \"pages\", that\n          hold all the contents of the page. All of these so-called pages have\n          fixed width and are positioned absolutely. That allows to control page\n          positioning and achieve the desired behavior.\n        </p>\n\n        <p className=\"details-page__text\">\n          In case page children fit onto the page without overflowing it\n          horizonally, the layout works pretty much the same way document flow\n          with statically positioned elements does. The difference comes when\n          page children start to overflow the page. In this case, once we start\n          scrolling that page, we need to slightly \"slow down\" all the following\n          pages. This way we have some scroll height to dedicate to scrolling\n          children of the current page vertically while the page itself remains\n          on top of the screen.\n        </p>\n\n        <p className=\"details-page__text\">\n          Of course, in reality everything gets a bit more complicated (as per\n          usual). One of such caveats is that once we start using assets, such\n          as fonts and images, we need to calculate heights of pages once again\n          as soon as the assests are loaded.\n        </p>\n\n        <p className=\"details-page__text\">\n          One thing I have found out while implementing this page is that it is\n          important to use CSS transformations instead of absolute positioning.\n          I found this to have a huge performance and visual impact. If you are\n          interested about the why's, there is a{\" \"}\n          <a\n            href=\"https://www.paulirish.com/2012/why-moving-elements-with-translate-is-better-than-posabs-topleft/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            good article by Paul Irish\n          </a>{\" \"}\n          on that topic.\n        </p>\n      </div>\n    </Page>\n  );\n};\n","import React from \"react\";\nimport { LayoutElementPosition } from \"../../components/Layout/Layout\";\nimport { Page } from \"../../components/Page/Page\";\nimport \"./FooterPage.css\";\n\nexport type FooterPageProps = LayoutElementPosition;\n\nexport const FooterPage: React.FC<FooterPageProps> = (\n  props: FooterPageProps,\n) => {\n  return (\n    <Page\n      {...props}\n      centerContent={true}\n      key=\"footer-page\"\n      className=\"footer-page\"\n    >\n      <p className=\"footer-page__text\">\n        Inspired by an amazing magazine about typegraphy{\" \"}\n        <a\n          href=\"http://www.typejournal.ru\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"footer-page__link\"\n        >\n          «Шрифт»\n        </a>\n      </p>\n      <p className=\"footer-page__text\">\n        Huge thanks to amazing people behind{\" \"}\n        <a\n          href=\"https://www.latofonts.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"footer-page__link\"\n        >\n          {\" \"}\n          Lato\n        </a>{\" \"}\n        and{\" \"}\n        <a\n          href=\"https://www.behance.net/gallery/2075950/Typeface-Adec20-%28free%29\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"footer-page__link\"\n        >\n          Adec\n        </a>{\" \"}\n        fonts\n      </p>\n      <p className=\"footer-page__text\">Zhuravsky Max, 2019</p>\n    </Page>\n  );\n};\n","import React from \"react\";\nimport { LayoutElementPosition } from \"../../components/Layout/Layout\";\nimport { Page } from \"../../components/Page/Page\";\nimport \"./MainPage.css\";\n\nexport type MainPageProps = LayoutElementPosition;\n\nexport const MainPage: React.FC<MainPageProps> = (props: MainPageProps) => {\n  return (\n    <Page {...props} key=\"main-page\" className=\"main-page\">\n      <p className=\"main-page__text\">\n        This page is a little demonstration of what I called a \"seamless scroll\"\n        layout. The main goal of such layout is to release the user from\n        necessity of scrolling the page horizontally while allowing some of the\n        page elements to overflow page width.\n      </p>\n      <p className=\"main-page__text\">\n        Enough talk, time to see it in action!{\" \"}\n        <span role=\"img\" aria-label=\"Fire\">\n          🔥\n        </span>\n      </p>\n    </Page>\n  );\n};\n","import React from \"react\";\nimport { LayoutElementPosition } from \"../../components/Layout/Layout\";\nimport { Page } from \"../../components/Page/Page\";\nimport \"./PanoramaPage.css\";\n\nexport type PanoramaPageProps = LayoutElementPosition;\n\nexport const PanoramaPage: React.FC<PanoramaPageProps> = (\n  props: PanoramaPageProps,\n) => {\n  return (\n    <Page {...props} key=\"panorama-page\" className=\"panorama-page\">\n      <img\n        className=\"panorama-page__image\"\n        src=\"https://images.unsplash.com/photo-1499336315816-097655dcfbda?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&dl=v2osk-303977-unsplash.jpg\"\n        alt=\"Panorama\"\n      />\n      <a\n        className=\"panorama-page__credits\"\n        href=\"https://unsplash.com/@v2osk?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        title=\"Download free do whatever you want high-resolution photos from v2osk\"\n      >\n        <span className=\"panorama-page__credits-text\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{\n              height: \"12px\",\n              width: \"auto\",\n              position: \"relative\",\n              verticalAlign: \"middle\",\n              top: \"-2px\",\n              fill: \"white\",\n            }}\n            viewBox=\"0 0 32 32\"\n          >\n            <title>unsplash-logo</title>\n            <path d=\"M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z\" />\n          </svg>\n        </span>\n        <span className=\"panorama-page__credits-text\">v2osk</span>\n      </a>\n    </Page>\n  );\n};\n","import React from \"react\";\nimport { LayoutElementPosition } from \"../../components/Layout/Layout\";\nimport { Page } from \"../../components/Page/Page\";\nimport \"./TitlePage.css\";\n\nexport type TitlePageProps = LayoutElementPosition;\n\nexport const TitlePage: React.FC<TitlePageProps> = (props: TitlePageProps) => {\n  return (\n    <Page {...props} key=\"title-page\" className=\"title-page\">\n      <h1 className=\"title-page__header\">Seamless scroll</h1>\n    </Page>\n  );\n};\n","import _ from \"lodash\";\nimport React, { createRef } from \"react\";\nimport { clamp } from \"../../utils/Helpers\";\nimport { Page } from \"../Page/Page\";\n\nexport interface LayoutElementPosition {\n  ref: React.RefObject<Page>;\n  offset: number;\n  hardOffset: number;\n  delta: number;\n}\n\nexport interface LayoutProps {\n  children: Array<(props: LayoutElementPosition) => React.ReactNode>;\n}\n\nexport interface LayoutState {\n  height: number[];\n  delta: number[];\n}\n\nexport class Layout extends React.Component<LayoutProps, LayoutState> {\n  public pageRefs: Array<React.RefObject<Page>> = [];\n  public state: LayoutState = {\n    height: [],\n    delta: [],\n  };\n\n  public componentDidMount() {\n    document.addEventListener(\"scroll\", this.debouncedHandleScroll);\n    document.addEventListener(\"load\", this.updateChildrenHeights);\n    window.onresize = this.updateChildrenHeights;\n    if (!!(document as any).fonts) {\n      (document as any).fonts.onloadingdone = this.updateChildrenHeights;\n    }\n    this.updateChildrenHeights();\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener(\"scroll\", this.debouncedHandleScroll);\n    document.removeEventListener(\"load\", this.updateChildrenHeights);\n    window.onresize = null;\n    if (!!(document as any).fonts) {\n      (document as any).fonts.onloadingdone = null;\n    }\n  }\n\n  public render() {\n    const height =\n      this.state.height.reduce((prev, current) => prev + current, 0) +\n      this.state.delta.reduce((prev, current) => prev + current, 0);\n    document.body.style.height = `${height}px`;\n    return <div className=\"layout\">{this.getPages()}</div>;\n  }\n\n  private handleScroll = () => {\n    this.forceUpdate();\n  }\n\n  private debouncedHandleScroll = _.debounce(this.handleScroll, 16, {\n    trailing: true,\n    leading: true,\n  });\n\n  private getPages() {\n    const { height, delta } = this.state;\n    const screenTop = window.pageYOffset;\n    const screenHeight = window.innerHeight;\n    let globalOffset = 0;\n\n    return this.props.children.map((child, i) => {\n      if (!delta.length || !height.length) {\n        // set all pages on top on the first render\n        const ref = createRef<Page>();\n        this.pageRefs.push(ref);\n        return child({\n          ref,\n          hardOffset: 0,\n          offset: 0,\n          delta: 0,\n        });\n      }\n\n      // calculate page position\n      const calculatedDelta = clamp(screenTop - globalOffset, 0, delta[i]);\n      let calculatedOffset = globalOffset + calculatedDelta - screenTop;\n      let calculatedHardOffset = 0;\n      if (calculatedOffset > screenHeight) {\n        calculatedHardOffset = screenHeight + 1;\n        calculatedOffset = 0;\n      } else if (calculatedOffset < -this.state.height[i]) {\n        calculatedHardOffset = -this.state.height[i];\n        calculatedOffset = 0;\n      }\n      globalOffset += height[i] + calculatedDelta;\n\n      return child({\n        ref: this.pageRefs[i],\n        hardOffset: calculatedHardOffset,\n        offset: calculatedOffset,\n        delta: calculatedDelta,\n      });\n    });\n  }\n\n  private updateChildrenHeights = () => {\n    console.log(\"Recalculating heights...\");\n\n    const height = this.pageRefs.map((ref) =>\n      !!ref.current ? ref.current.getHeight() : 0,\n    );\n    const delta = this.pageRefs.map((ref) =>\n      !!ref.current ? ref.current.getDelta() : 0,\n    );\n    this.setState({\n      height,\n      delta,\n    });\n  }\n}\n","export const clamp = (value: number, min: number, max: number) => {\n  return Math.max(min, Math.min(value, max));\n};\n","import React from \"react\";\nimport { DescriptionPage } from \"../../pages/DescriptionPage/DescriptionPage\";\nimport { DetailsPage } from \"../../pages/DetailsPage/DetailsPage\";\nimport { FooterPage } from \"../../pages/FooterPage/FooterPage\";\nimport { MainPage } from \"../../pages/MainPage/MainPage\";\nimport { PanoramaPage } from \"../../pages/PanoramaPage/PanoramaPage\";\nimport { TitlePage } from \"../../pages/TitlePage/TitlePage\";\nimport { Layout } from \"../Layout/Layout\";\n\nconst App: React.FC = () => {\n  const pages = [\n    TitlePage,\n    MainPage,\n    PanoramaPage,\n    DescriptionPage,\n    DetailsPage,\n    FooterPage,\n  ];\n  return <Layout>{pages}</Layout>;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}